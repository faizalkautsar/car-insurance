name: rnd-build-cache
on:
  pull_request:
    branches:
      - "main/**"
  workflow_dispatch:

defaults:
  run:
    shell: bash

jobs:
  main:
    runs-on: ubuntu-latest
    # Map a step output to a job output
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        name: List the state of node modules
        continue-on-error: true
        run: npm list

      - name: Install dependencies
        run: npm install

      - name: Setup Node version
        uses: actions/setup-node@v3
        with:
          node-version: 16.19.0

      - run: npm install --legacy-peer-deps

      - run: npm run test


  build:
    runs-on: ubuntu-latest
    needs: main
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup Node version
        uses: actions/setup-node@v3
        with:
          node-version: 16.19.0

      - name: Cache node modules
        id: cache-npm
        uses: actions/cache@v3
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - run: npm install --legacy-peer-deps

      - name: Build app
        run: npm run build
